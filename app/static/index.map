{"version":3,"sources":["App.tsx","index.tsx","../../node_modules/parcel-bundler/src/builtins/bundle-url.js","../../node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,GAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkB,EAAA,SAAA,CAAA,GAAA,EAAA,MAAA,CAAA;;AAAlB,WAAA,GAAA,GAAA;;AASC;;AARQ,EAAA,GAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACE,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,MADF,EAEE,gDAFF,CADF;AAMD,GAPM;;AAQT,SAAA,GAAA;AATA,CAAA,CAAkB,KAAK,CAAC,SAAxB,CAAA;;AAWA,OAAA,CAAA,SAAA,CAAA,GAAe,GAAf;;AEbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AF9BA,IAAA,KAAA,GAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,YAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,OAAA,CAAA,0BAAA,CAAA;;AAEA,QAAQ,CAAC,MAAT,CACE,oBAAC,KAAD,CAAC,OAAD,OADF,EAEE,QAAQ,CAAC,cAAT,CAAwB,YAAxB,CAFF;AAKA,OAAO,CAAC,GAAR,CAAY,yBAAuB,OAAO,CAAC,QAAR,CAAiB,IAApD;AACA,OAAO,CAAC,GAAR,CAAY,aAAW,OAAO,CAAC,QAAR,CAAiB,MAAxC;AACA,OAAO,CAAC,GAAR,CAAY,iBAAe,OAAO,CAAC,QAAR,CAAiB,QAA5C","file":"index.map","sourceRoot":"../../src/core","sourcesContent":["import * as React from \"react\";\n\nclass App extends React.Component {\n  public render() {\n    return (\n      <div className=\"App\">\n        <div className=\"logo\" />\n        <h1>Awesome Nail!</h1>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\n\nimport \"../assets/style/app.scss\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById('MOUNT_NODE') as HTMLElement\n);\n\nconsole.log(`We are using Node.js${process.versions.node}`);\nconsole.log(`Chromium${process.versions.chrome}`);\nconsole.log(`and Electron${process.versions.electron}`);\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}